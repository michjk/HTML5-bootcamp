AUDIO VIDEO

Source Tags

Both audio and video tags support nested tags of different encodings.

<media controls>
	<source src="foo.ogg" type = "audio/ogg"/>
	<source src="foo.mp3" type = "audio/mp3"/>
	Sorry, you r cannot play lah
</media>

Feature Detecting 
			function canPlayOgg () {
				var a = document.createElement('audio');
				return !!(a.canPlayType &&
					a.canPlayType('audio/ogg; codecs="vorbis"')
					.replace(/no/, ''));
            };

            canPlayOgg(); // true or false

Control
			<audio id="noControls">
              <source src="../media/lateralus_clip.ogg" type="audio/ogg"/>
              <source src="../media/lateralus_clip.mp3" type="audio/mp3"/>
            </audio>
            <button id="play">Play/Pause</button>
            <button id="volUp">Volume+</button>
            <button id="volDown">Volume->/button>
            <input id="seek" type="range" value="" max=""/>
            <script>
              var audio = document.getElementById("noControls");
              var play = document.getElementById("play");
              var volUp = document.getElementById("volUp");
              var volDown = document.getElementById("volDown");
              var seek = document.getElementById("seek");
              var playing = false;

              play.addEventListener("click", function (e) {
                playing = !playing;
                if (playing) {
                  audio.play();
                } else {
                  audio.pause();
                }
              });

              function changeVol (up) {
                if (up) {
                  audio.volume += 0.1;
                } else {
                  audio.volume -= 0.1;
                }
              };

              volUp.addEventListener("click", function () {
                changeVol(true);
              });

              volDown.addEventListener("click", function () {
                changeVol(false);
              });

              audio.addEventListener("timeupdate", function (e) {
                seek.value = audio.currentTime;
              });

              seek.min = seek.value = audio.seekable.start(0);
              seek.max = audio.seekable.end(0);
              seek.addEventListener("change", function (e) {
                audio.currentTime = seek.value;
              });
            </script>

			
			

			